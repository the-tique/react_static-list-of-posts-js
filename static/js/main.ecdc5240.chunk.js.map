{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","body","email","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postList","postId","commentsList","filter","userId","usersList","find","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,QAAGC,QAC5BC,EADyB,EACzBA,KACAC,EAFyB,EAEzBA,KACAC,EAHyB,EAGzBA,MAHyB,OAKzB,qBAAIC,UAAU,cAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SACGF,QChBMI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,oBAAIH,UAAU,cAAd,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCLrCC,G,MAAW,SAAC,GAAD,QAAGC,KACzBV,EADsB,EACtBA,KACAE,EAFsB,EAEtBA,MAFsB,OAItB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGF,MCHQW,EAAW,SAAC,GAAD,QAAGC,KACzBC,EADsB,EACtBA,MACAZ,EAFsB,EAEtBA,KACAK,EAHsB,EAGtBA,SACAI,EAJsB,EAItBA,KAJsB,OAMtB,qBAAIP,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGF,IAGFK,EAASQ,OACR,cAAC,EAAD,CAAaR,SAAUA,IAEvB,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,oCC/BKS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIb,UAAU,WAAd,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCYtC,IAAMQ,EAAQC,EAASV,KAAI,SAAAK,GAAI,kCAC1BA,GAD0B,IAE7BN,UAXmBY,EAWGN,EAAKJ,GAVpBW,EAAaC,QAAO,SAAArB,GAAO,OAAIA,EAAQmB,SAAWA,MAWzDR,MAReW,EAQDT,EAAKS,OAPZC,EAAUC,MAAK,SAAAb,GAAI,OAAIA,EAAKF,KAAOa,MACvC,QAFL,IAAiBA,EAJIH,KAeRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecdc5240.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: {\n  name,\n  body,\n  email,\n} }) => (\n  <li className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </li>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <ul className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </ul>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: {\n  name,\n  email,\n} }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post: {\n  title,\n  body,\n  comments,\n  user,\n} }) => (\n  <li className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {comments.length ? (\n      <CommentList comments={comments} />\n    ) : (\n      <>\n        <hr />\n\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      </>\n    )}\n  </li>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </ul>\n);\n","import './App.scss';\n\nimport postList from './api/posts.json';\nimport commentsList from './api/comments.json';\nimport usersList from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getComments(postId) {\n  return commentsList.filter(comment => comment.postId === postId);\n}\n\nfunction getUser(userId) {\n  return usersList.find(user => user.id === userId)\n  || null;\n}\n\nconst posts = postList.map(post => ({\n  ...post,\n  comments: getComments(post.id),\n  user: getUser(post.userId),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}